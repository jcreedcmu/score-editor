\documentclass{article}
\input{prooftree}
\usepackage{stmaryrd}
\input{linear}
\def\erule#1#2{\begin{prooftree}#1\justifies #2\end{prooftree}}
\def\lpar{\bindnasrepma}
\def\lamp{\binampersand}
\def\bpush{\mathbf{push}}
\newarrow {Equiv} =====
\def\ups#1{#1^G}
\def\dns#1{#1^B}

\begin{document}

A cache-type over $d : B \to D$ is  ${\bf C} = (C, G, \pi, \iota, \delta, g)$ such that
\[
\begin{diagram}
B&\lEquiv&B\\
\uOnto<{\pi}&\ldEmbed~{\iota}&\dTo>d\\
C&\rTo_{\delta}&D\\
\end{diagram}
\qquad\qquad
\begin{diagram}
G &\rEmbed^{g}_{\textrm{[eq'izer]}}&C&\pile{\rTo^{\delta}\\\rTo_{d\circ\pi}}&D
\end{diagram}
\]
These say how to (maybe inefficiently) derive derived state from the base ($d$), and how to derive it (more efficiently)
from state with extra cache ($\delta$), how to project out the base state from the cache state ($\pi$), and
how to create an empty cache ($\iota$). Note that it's not necessarily the case that $d\pi = \delta$ despite the appearance
of the diagram.


A morphism ${\bf C}_1 \to {\bf C}_2$ to the state is
$f : C_1 \to C_2$ such that we can find $\ups f$, $\dns f$ to make the following commute:
\[\begin{diagram}
G_1&\rEmbed^{g_1}&C_1&\rOnto^{\pi_1}&B\\
\dTo<{\ups f}&&\dTo>f&&\dTo>{\dns f}\\
G_2&\rEmbed_{g_2}&C_2&\rOnto_{\pi_2}&B\\
\end{diagram}
\]

{\bf Fact 1}: The choices of $\ups f$ and $\dns f$ are uniquely determined by $f$.

{\bf Proof}:
Because we have $\ups f$, we know $fg_1$ equalizes $\delta_2$ and $d\pi_2$.
\[
\begin{diagram}
G_1&\rEmbed^{g_1}&C_1\\
\dEmbed<{g_1}&\rdTo>{\ups f}&&\rdTo>f\\
C_1&&G_2&\rEmbed^{g_2}&C_2\\
&\rdTo<f&\dEmbed<{g_2}&&\dTo>{\delta_2}\\
&&C_2&\rTo_{d\pi_2}&D\\
\end{diagram}
\qquad\qquad
\]
Dually, $\dns f$ means $\pi_2 f$ coequalizes $1_C$ and $\iota_1 \pi_1$.
\[
\begin{diagram}
C_1&\rTo^{\pi_1}&B&\rEmbed^{\iota_1}&C_1\\
\dEquiv&&&\rdEquiv&\dOnto>{\pi_1}&\rdTo>f\\
C_1&&\rOnto_{\pi_1}&&B&&C_2\\
&\rdTo_{f}&&&&\rdTo>{\dns f}&\dOnto>{\pi_2}\\
&&C_2&&\rOnto_{\pi_2}&&B\\
\end{diagram}
\]


We can use the universal properties of $g_2$ as equalizer of $d\pi_2$ and $\delta_2$,
and $\pi_1$ as coequalizer of $\iota_1 \pi_1$ and $1_C$ to get the required uniqueness.


\end{document}
